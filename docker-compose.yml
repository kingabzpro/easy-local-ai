networks:
  demo:


x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  environment:
    OLLAMA_MODEL: ${OLLAMA_MODEL}
    OLLAMA_EMBEDDING_MODEL: ${OLLAMA_EMBEDDING_MODEL}
  entrypoint: /bin/sh
  command:
    - "-c"
    - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull $OLLAMA_MODEL"
    - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull $OLLAMA_EMBEDDING_MODEL"

services:
  langflow:
    image: langflowai/langflow
    pull_policy: always
    container_name: langflow
    networks: ['demo']
    ports:
      - "7860:7860"
    depends_on:
      - postgres
      - qdrant
      - ollama
    environment:
      LANGFLOW_DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - langflow-data:/app/langflow
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    networks: ['demo']
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - langflow-postgres:/var/lib/postgresql/data
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['demo']
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped
  
  ollama-gpu:
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-pull-llama-gpu:
    <<: *init-ollama
    depends_on:
      - ollama-gpu

volumes:
  langflow-postgres:
  langflow-data:
  qdrant_storage:
  ollama_storage:
